---
layout:     post
title:      RabbitMQ-01,入门及基本概念
subtitle:   RabbitMQ快速入门，及基本概念
date:       2019-6-01
author:     yukai.bai
header-img: img/post-bg-kuaidi.jpg
catalog: true
tags:
    - RabbitMQ
    - CentOS7
    - Java
---

## RabbitMQ-01

### 互联网大厂为什么选择RabbitMQ?

#### 初识RabbitMQ

RabbitMQ是一个开源的消息代理和队列服务器，用来通过普通协议在完全不同的应用之间共享数据，RabbitMQ是使用Erlang语言来编写，并且是基于AMQP协议的。

#### 那些大厂在使用RabbitMQ

滴滴、美团、头条、去哪儿、同程艺龙...

#### 为什么

1、 开源、性能优越、稳定性保障

2、 提供可靠性信息投递模式（confirm）、返回模式（return）

3、 与SpringAMQP完美整合、API丰富

4、 集群模式丰富，表达式配置，HA模式，镜像队列模型

5、 在保证数据不丢失得前提下做到高可靠性、可用性

### RabbitMQ的高性能之道是如何做到的？

Erlang语言最初在于交换机领域的架构模式，这样使得RabbitMQ在Broker之间进行数据交互的性能是非常优秀的

Erlang的优点：Erlang有着和原生Socket一样的延迟

### 什么是AMQP协议

AMQP全称：Advanced Message Queuing Protocol

AMQP翻译：高级消息队列协议

AMQP定义：是具有现代特征的二进制协议。是一个提供统一消息服务的应用标准高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。

### AMQP核心概念是什么

Server:又称Broker,接受客户端的连接，实现AMQP实体服务。

Connection:连接，应用程序与Broker的网络连接

Channel：网络信道，几乎所有的操作都在Channel中进行，Channel是进行消息读写的通道。客户端可建立多个Channel,每个Channel表示一个回话任务。

Message:消息，服务器和应用程序之间传送的数据，由Properties和Body组成。Properties可以对消息进行修饰，不比如消息的优先级延迟等高级特性；Body就是消息内容。

Virtual host:虚拟主机地址，用于进行逻辑隔离，是最上层的消息路由。一个Virtual Host里面可以有若干个Exchange和Queue,同一个Virtual Host里面不能用相同名称的Exchange或者Queue

Exchange: 交换机，接收消息，根据路由键转发消息到绑定的队列

Binding: Exchange和Queue之间的虚拟连接，binding中可以包换routing key

 Routing key:一个路由规则，虚拟机可用它来确定如何路由一个特定 消息

Queue:也成为Message Queue,消息队列，保存消息并将他们转发给消费者

### RabbitMQ整体架构模型是什么样子的？

![](E:\documentFile\Typora\rabbitmq\RabbitMq架构图.png)





### RabbitMQ消息是如何流转的？



![](E:\documentFile\Typora\rabbitmq\消息流转图.png)



### RabbitMQ安装与使用

**rabbitmq安装**

<https://www.cnblogs.com/ylsforever/p/6600925.html> 

**rabbitmq使用**

服务的启动：rabbitmq-server start &

服务停止：rabbitmqctl stop_app

管理插件: rabbitmq-plugins enable rabbitmq_management

访问地址：ip:15672

### 命令行与管控台

rabbitmqctl stop_app：关闭应用

rabbitmqctl start_app: 启动应用

rabbitmqcl status: 节点状态

rabbitmqctl add_user username password:添加用户

rabbitmqctl list_users:列出所有用户

rabbitmqctl delete_user username:删除用户

rabbitmqctl clear_permissions -p vhostpath username:清除用户权限

rabbitmqctl lsit_user_permissions username:列出用户权限

rabbitmqctl change_password username newpassword:修改密码

rabbitmqctl set_permission -p vhostpath username

". * "". *  "".*" :设置用户权限

**虚拟主机相关**

rabbitmqctl add_vhost vhostpath: 创建虚拟主机

rabbitmqctl list_vhosts: 列出所有虚拟主机

rabbitmqctl list_permissions -p vhostpath: 列出虚拟主机上所有权限

rabbitmqctl delete_vhost vhostpath：删除虚拟主机

**队列相关**

rabbitmqctl list_queues: 查看所有队列信息

rabbitmqctl -p vhostpath purge_queue blue: 清除队列里的消息

**集群相关**

rabbitmqctl reset: 移除所有数据，要在rabbitmqctl stop_app 之后使用

rabbitmqctl join_cluster <clusternode> [--ram]:组成集群命令

rabbitmqctl cluster_status:查看集群状态

rabbitmqctl change_cluster_node_type disc | ram 修改集群节点的存储形式

rabbitmqctl forget_cluster_node [--offline] 忘记节点（摘除节点）

rabbitmqctl rename_cluster_node oldnode1 newnode1 [oldnode2][newnode2] ... (修改节点名称)

### RabbitMQ消息生产与消费

ConnectionFactory:获取连接工厂

Connection: 一个连接

Channel:数据通信信道，可发送和接收消息

Queue:具体的消息存储队列

Producer&Consumer 生产，消费

### RabbitMQ交换机详解

Exchange:接收消息，并根据路由键转发消息锁绑定的队列

Name:交换机名称

Type:交换机类型direct、topic、fanout、heanders

Durability:是否需要持久化，true为持久化

Auto Delete：当最后一个绑定到Exchange上的队列删除后，自动删除该Exchange

Internal:当前Exchange是否用户RabbitMQ内部使用，默认为False

**Direct Exchange** 

所有发送到Direct Exchange的消息被转发到RouteKey中指定的Queue

注意：Direct模式可以使用RabbitMQ自带的Exchane:default Exchange，所以不需要将Exchange进行任何绑定（binding）操作，消息传递时，RouteKey必须完全匹配才会被队列接收，否则改消息会被抛弃

**Topic Exchange** 

所有发送到Topic Exchange的消息被转发到所有关心RouteKey中指定Topic的Queue上

Exchange将RouteKey和某Topic进行模糊匹配，此时队列需要绑定一个Topic

注意：可以使用通配符进行模糊匹配

符号 "#" 匹配一个或多个词

符号 "*" 匹配不多不少一个词

例如： "log.#"能够匹配到"log.info.oa"

​	     "log.*"只会匹配到 "log.erro"

**Fanout Exchange**

不处理路由键，只需要简单的将队列绑定到交换机上

发送到交换机的消息都会被转发到与该交换机绑定的所有队列上

Fanout交换机转发消息是最快的



### RabbitMQ队列、绑定、虚拟主机、消息

Exchange和Exchange、Queue之间的连接关系

Binding中可以包含RoutingKey或者参数

消息队列，实际存储消息数据

Durability：是否持久化、Durable：是，Transient：否

Auto delete:如选yes,代表最后一个监听被移除之后，该Queue会自动被删除

**Message**

服务之间和应用程序之间传送的数据

本质上就是一段数据，由Properties和Payload(Body)组成

常用属性：deliery mode、headers(自定义属性)

content_type、content_encoding、priority

correlation_id、reply_to、expiration、message_id

timestamp、type、user_id、app_id、cluster_id

**Virtual host-虚拟主机**

虚拟地址、用于进行逻辑隔离，最上层的消息路由

一个Virtual Host里面可以有若干个Exchange和Queue

同一个Virtual Host里面不能有相同名称的Exchange或Queue



RabbitMQ概念、安装使用、管控台操作、结合RabbitMQ的特性，Exchange、Queue、Bingding、RoutingKey、Message、进行核心的API的讲解，通过本章的学习，希望大家对RabbitMQ有一个初步的认识。


